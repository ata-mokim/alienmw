<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="com.alienasia.alienmw.dao.HoReturnEpcInfoDAO"><!--namespace를 통해 UserDAO와 연결합니다. -->


	<select id="getList" resultType="com.alienasia.alienmw.dto.HoReturnEpcInfoDTO">
		select * from ho_return_epc_info where ho_return_epc_info_seq > 0
   	    <if test="ho_return_num != null and ho_return_num != '' ">
			and ho_return_num = #{ho_return_num}
		</if>
		<if test="status != null and status != '' ">
			and status  = #{status}
		</if>
		<if test="barcode != null and barcode != '' ">
			and barcode = #{barcode}
		</if>
		order by ho_return_epc_info_seq desc limit 100
	</select>


	<select id="getGroupList" resultType="com.alienasia.alienmw.dto.HoReturnEpcInfoDTO">
		select  barcode, style, color, size , count(barcode) as amount, order_degree, store_code from ho_return_epc_info where ho_return_epc_info_seq > 0
		<if test="store_code != null and store_code != '' ">
			and store_code = #{store_code}
		</if>
		<if test="barcode != null and barcode != '' ">
			and barcode = #{barcode}
		</if>
		and status  = #{status}
		group by barcode, style,color, size, store_code, order_degree
		order by reg_date desc limit 100
	</select>



	<insert id="insert">
	<![CDATA[
		    insert into ho_return_epc_info
							(    reg_date, reg_user_id ,ho_return_info_seq , ho_return_num  , epc, check_date, barcode
							    , style, color, size, order_degree, store_code, status
							 ) values
			              ( now(), #{reg_user_id},#{ho_return_info_seq} , #{ho_return_num},#{epc},date_format(now(), '%Y-%m-%d'),#{barcode}
			                    , #{style}, #{color}, #{size}, #{order_degree}, #{store_code}, '0'
			              )
			]]>
	</insert>

	<update id="hoReturnInfoUpdate">
		<![CDATA[
	update ho_return_info
	set check_amount = check_amount - (select count(ho_return_info_seq)
									   from ho_return_epc_info
									   where barcode =  #{barcode}
										 and style =  #{style}
										 and color =  #{color}
										 and size =  #{size}
										 and order_degree =  #{order_degree}
										)
	,upd_date = now()
	,upd_user_id = #{upd_user_id}
	,request_date = date_format(now(), '%Y-%m-%d')
	where ho_return_info_seq in (select ho_return_info_seq
	from ho_return_epc_info
	where barcode =  #{barcode}
	and style =  #{style}
	and color =  #{color}
	and size =  #{size}
	and order_degree =  #{order_degree}
	 )
		]]>
	</update>



	<delete id="remove">
		<![CDATA[
		delete from ho_return_epc_info
		where barcode =  #{barcode}
        and style =  #{style}
		and color =  #{color}
		and size =  #{size}
		and order_degree =  #{order_degree}
		]]>
	</delete>

	<update id="statusUpdate">
	update  ho_return_epc_info
	set status = #{status}
	,upd_date = now()
	,upd_user_id = #{upd_user_id}
	where
	<if test="epc != null and epc != '' ">
		 epc = #{epc}
	</if>

	<if test="epc == null or epc == '' ">
	     barcode =  #{barcode}
	and style =  #{style}
	and color =  #{color}
	and size =  #{size}
	  and order_degree =  #{order_degree}
	</if>
	</update>


	<update id="rfidInfoStatusUpdate">
		<![CDATA[
		update rfid_info
		set status = '9'
		  ,upd_date = now()
		  ,upd_user_id = #{upd_user_id}
		  ,return_box_barcode = #{barcode}
		  ,w_return_date = date_format(now(), '%Y-%m-%d')
		where epc in (select epc from ho_return_epc_info where barcode =  #{barcode}
														   and style =  #{style}
														   and color =  #{color}
														   and size =  #{size}
		 													and order_degree =  #{order_degree}
		 													and status ='1'
		)
		]]>
	</update>


	<update id="returnWarehouse">
		<![CDATA[
		update rfid_info
		set status = '10'
		  ,upd_date = now()
		  ,upd_user_id = #{upd_user_id}
		where epc in (select epc from ho_return_epc_info where barcode =  #{barcode}
														   and style =  #{style}
														   and color =  #{color}
														   and size =  #{size}
		  and order_degree =  #{order_degree}
		  and status ='2'
			)
		]]>
	</update>




	<update id="statusRemove">
		update  ho_return_epc_info
		set
		<if test="status != null and status != '' ">
			status  = #{status}
		</if>
		,upd_date = now()
		,upd_user_id = #{upd_user_id}
		where
		<if test="epc != null and epc != '' ">
			epc  = #{epc}
		</if>

		<if test="barcode != null and barcode != '' ">
			barcode =  #{barcode}
			and style =  #{style}
			and color =  #{color}
			and size =  #{size}
			and order_degree =  #{order_degree}
			<if test="status == '1'">
				and	status  = '2'
			</if>
		</if>
		<if test="store_code != null and store_code != '' ">
			and store_code = #{store_code}
		</if>
	</update>


</mapper>